import '../../stencil.core';
import '../../stencil.core';
import '../../stencil.core';
import '../../stencil.core';
export declare class ObjectGui {
    parent: any;
    excludeProto: any;
    isLast: boolean;
    index: number;
    obj: any;
    tick: boolean;
    expanded: boolean;
    value: any;
    highlight: boolean;
    inViewPort: boolean;
    propCache: Array<string>;
    ownPropertyLength: number;
    el: HTMLElement;
    updateInterval: {
        value: number;
        base: number;
        min: number;
        max: number;
        factor: number;
    };
    externalRender: boolean;
    timer: any;
    intervalTimer: any;
    childBase: any;
    key: string;
    static baseObjectProps: string;
    static baseArrayProps: string;
    constructor();
    tickHandler(): void;
    objHandler(): void;
    keyHandler(): void;
    componentWillLoad(): void;
    componentDidUnload(): void;
    static isObject(a: any): boolean;
    static isNumber(a: any): boolean;
    static isString(a: any): boolean;
    static isUndefined(a: any): boolean;
    static isFunction(a: any): boolean;
    static isNull(a: any): boolean;
    static isNaN(a: number): boolean;
    thisIsAGetter(): boolean;
    static isEqual(a: any, b: any): boolean;
    update(): void;
    objIsInViewport(): boolean;
    expandClick(event: Event): void;
    getType(): any;
    startAnimation(callback: any): void;
    clearTimer(timer: any): void;
    getPropCache(): Array<string>;
    render(): JSX.Element;
}
